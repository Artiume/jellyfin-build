#!/bin/bash

set -o errexit
set -o xtrace

export DOCKER_CLI_EXPERIMENTAL=enabled

builddir="/srv/jellyfin"
reponame="jellyfin"
repotype="server"

docker_image="jellyfin/jellyfin"

pushd ${builddir}

# Grab the source and init
./build ${reponame} --clone-only

pushd projects/${repotype}/${reponame}

tagname="master"
nice_tagname="nightly-$( date +%Y%m%d )"

# Check out the tag
git fetch --all
git reset --hard HEAD
git clean -fd
git checkout origin/master

# Initialize the submodule
git submodule update --init

# Set up qemu static
docker run --rm --privileged multiarch/qemu-user-static:register --reset

# Build images (amd64, arm, arm64)
docker build --no-cache --pull -f Dockerfile -t "${docker_image}":${nice_tagname}-amd64 --build-arg JELLYFIN_WEB_VERSION=master .
docker build --no-cache --pull -f Dockerfile.arm -t "${docker_image}":${nice_tagname}-arm --build-arg JELLYFIN_WEB_VERSION=master .
docker build --no-cache --pull -f Dockerfile.arm64 -t "${docker_image}":${nice_tagname}-arm64 --build-arg JELLYFIN_WEB_VERSION=master .

# Push images (amd64, arm, arm64)
docker push "${docker_image}":${nice_tagname}-amd64
docker push "${docker_image}":${nice_tagname}-arm
docker push "${docker_image}":${nice_tagname}-arm64

# Create tagname manifest
docker manifest create --amend "${docker_image}:${nice_tagname}" \
	"${docker_image}:${nice_tagname}-amd64" \
	"${docker_image}:${nice_tagname}-arm" \
	"${docker_image}:${nice_tagname}-arm64"
docker manifest push --purge "${docker_image}:${nice_tagname}"

# Create alias nightly manifest
docker manifest create --amend "${docker_image}:nightly" \
	"${docker_image}:${nice_tagname}-amd64" \
	"${docker_image}:${nice_tagname}-arm" \
	"${docker_image}:${nice_tagname}-arm64"
docker manifest push --purge "${docker_image}:nightly"

#####

popd
docker image ls | awk '{ print $3 }' | xargs docker image rm --force || true
exit 0
